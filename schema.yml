openapi: 3.0.3
info:
  title: FICCT-SCRUM API
  version: 1.0.0
  description: API documentation for FICCT-SCRUM application
paths:
  /api/v1/auth/login/:
    post:
      operationId: auth_login
      description: Authenticate user and return JWT tokens for API access
      summary: User Login
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/v1/auth/logout/:
    post:
      operationId: auth_logout
      description: Logout user and blacklist refresh token
      summary: User Logout
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogoutRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogoutRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutResponse'
          description: ''
  /api/v1/auth/me/:
    get:
      operationId: auth_current_user
      description: Retrieve authenticated user information
      summary: Get Current User
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/auth/password-reset-confirm/:
    post:
      operationId: auth_password_reset_confirm
      description: Reset password using token from email
      summary: Confirm Password Reset
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirmResponse'
          description: ''
  /api/v1/auth/password-reset-request/:
    post:
      operationId: auth_password_reset_request
      description: Send password reset email to user
      summary: Request Password Reset
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequestResponse'
          description: ''
  /api/v1/auth/profiles/:
    get:
      operationId: auth_profiles_list
      description: |-
        User profile management operations including avatar uploads and personal information.
        Provides comprehensive profile management with S3 integration for avatar storage.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Authentication
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserProfileList'
          description: ''
    post:
      operationId: profiles_create
      description: Create a new user profile with personal information and avatar
      summary: Create User Profile
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '500':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/v1/auth/profiles/{user}/:
    get:
      operationId: auth_profiles_retrieve
      description: |-
        User profile management operations including avatar uploads and personal information.
        Provides comprehensive profile management with S3 integration for avatar storage.
      parameters:
      - in: path
        name: user
        schema:
          type: integer
        description: A unique value identifying this User Profile.
        required: true
      tags:
      - Authentication
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    put:
      operationId: profiles_update
      description: Update user profile information including avatar upload
      summary: Update User Profile
      parameters:
      - in: path
        name: user
        schema:
          type: integer
        description: A unique value identifying this User Profile.
        required: true
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '403':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '500':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
    patch:
      operationId: auth_profiles_partial_update
      description: |-
        User profile management operations including avatar uploads and personal information.
        Provides comprehensive profile management with S3 integration for avatar storage.
      parameters:
      - in: path
        name: user
        schema:
          type: integer
        description: A unique value identifying this User Profile.
        required: true
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    delete:
      operationId: auth_profiles_destroy
      description: |-
        User profile management operations including avatar uploads and personal information.
        Provides comprehensive profile management with S3 integration for avatar storage.
      parameters:
      - in: path
        name: user
        schema:
          type: integer
        description: A unique value identifying this User Profile.
        required: true
      tags:
      - Authentication
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/auth/profiles/me/:
    get:
      operationId: profiles_me
      description: Retrieve the current user's profile information
      summary: Get Current User Profile
      tags:
      - Authentication
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/v1/auth/profiles/upload-avatar/:
    post:
      operationId: profiles_upload_avatar
      description: Upload or update user avatar image
      summary: Upload Avatar
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvatarUploadRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AvatarUploadRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AvatarUploadRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/v1/auth/register/:
    post:
      operationId: auth_register
      description: Register a new user account with email verification and profile
        creation
      summary: User Registration
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/v1/auth/token/:
    post:
      operationId: auth_token_create
      tags:
      - auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/v1/auth/token/refresh/:
    post:
      operationId: auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/auth/users/:
    get:
      operationId: auth_users_list
      description: |-
        User management operations including profile viewing, editing and password changes.
        Provides comprehensive user account management with security controls.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Authentication
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: auth_users_create
      description: |-
        User management operations including profile viewing, editing and password changes.
        Provides comprehensive user account management with security controls.
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/auth/users/{id}/:
    get:
      operationId: auth_users_retrieve
      description: |-
        User management operations including profile viewing, editing and password changes.
        Provides comprehensive user account management with security controls.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - Authentication
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_users_update
      description: |-
        User management operations including profile viewing, editing and password changes.
        Provides comprehensive user account management with security controls.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: auth_users_partial_update
      description: |-
        User management operations including profile viewing, editing and password changes.
        Provides comprehensive user account management with security controls.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: auth_users_destroy
      description: |-
        User management operations including profile viewing, editing and password changes.
        Provides comprehensive user account management with security controls.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - Authentication
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/auth/users/{id}/change-password/:
    post:
      operationId: users_change_password
      description: Change the user's password with old password verification
      summary: Change Password
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordChangeResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '403':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/v1/auth/users/me/:
    get:
      operationId: users_me
      description: Retrieve the current authenticated user's profile information
      summary: Get Current User
      tags:
      - Authentication
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update_me_2
      description: Update the current authenticated user's profile information
      summary: Update Current User
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_update_me
      description: Update the current authenticated user's profile information
      summary: Update Current User
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/logs/error-logs/:
    get:
      operationId: error_logs_list
      summary: List Error Logs
      parameters:
      - in: query
        name: error_type
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: severity
        schema:
          type: string
          enum:
          - critical
          - high
          - low
          - medium
        description: |-
          * `low` - Low
          * `medium` - Medium
          * `high` - High
          * `critical` - Critical
      - in: query
        name: status
        schema:
          type: string
          enum:
          - ignored
          - investigating
          - new
          - resolved
        description: |-
          * `new` - New
          * `investigating` - Investigating
          * `resolved` - Resolved
          * `ignored` - Ignored
      tags:
      - Logging
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedErrorLogList'
          description: ''
  /api/v1/logs/error-logs/{id}/:
    get:
      operationId: error_logs_retrieve
      summary: Get Error Log Details
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Error Log.
        required: true
      tags:
      - Logging
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLog'
          description: ''
    put:
      operationId: error_logs_update
      summary: Update Error Log
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Error Log.
        required: true
      tags:
      - Logging
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorLogRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ErrorLogRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ErrorLogRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLog'
          description: ''
    patch:
      operationId: error_logs_partial_update
      summary: Partial Update Error Log
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Error Log.
        required: true
      tags:
      - Logging
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedErrorLogRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedErrorLogRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedErrorLogRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLog'
          description: ''
  /api/v1/logs/system-logs/:
    get:
      operationId: system_logs_list
      description: Retrieve system logs with filtering and search capabilities. Admin
        access required.
      summary: List System Logs
      parameters:
      - in: query
        name: action_type
        schema:
          type: string
          enum:
          - api_request
          - authentication
          - authorization
          - crud_operation
          - error
          - integration
          - performance
          - security_event
          - system_event
        description: |-
          * `authentication` - Authentication
          * `authorization` - Authorization
          * `crud_operation` - CRUD Operation
          * `api_request` - API Request
          * `system_event` - System Event
          * `security_event` - Security Event
          * `performance` - Performance
          * `integration` - Integration
          * `error` - Error
      - in: query
        name: ip_address
        schema:
          type: string
      - in: query
        name: level
        schema:
          type: string
          enum:
          - CRITICAL
          - DEBUG
          - ERROR
          - INFO
          - WARNING
        description: |-
          * `DEBUG` - Debug
          * `INFO` - Info
          * `WARNING` - Warning
          * `ERROR` - Error
          * `CRITICAL` - Critical
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - Logging
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSystemLogList'
          description: ''
  /api/v1/logs/system-logs/{id}/:
    get:
      operationId: system_logs_retrieve
      description: Retrieve detailed information about a specific system log entry.
      summary: Get System Log Details
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this System Log.
        required: true
      tags:
      - Logging
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemLog'
          description: ''
  /api/v1/orgs/members/:
    get:
      operationId: organization_members_list
      summary: List Organization Members
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Organizations
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationMemberList'
          description: ''
    post:
      operationId: organization_members_create
      summary: Invite Member to Organization
      tags:
      - Organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationMemberRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationMemberRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationMemberRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationMember'
          description: ''
  /api/v1/orgs/members/{id}/:
    get:
      operationId: organization_members_retrieve
      summary: Get Organization Member Details
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Organizations
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationMember'
          description: ''
    put:
      operationId: organization_members_update
      summary: Update Member Role
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationMemberRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationMemberRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationMemberRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationMember'
          description: ''
    patch:
      operationId: organization_members_partial_update
      summary: Partial Update Member
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationMemberRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationMemberRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationMemberRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationMember'
          description: ''
    delete:
      operationId: organization_members_destroy
      summary: Remove Member from Organization
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Organizations
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/orgs/members/{id}/update-role/:
    patch:
      operationId: organization_members_update_role
      summary: Update Member Role
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationMemberRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationMemberRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationMemberRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationMember'
          description: ''
  /api/v1/orgs/organizations/:
    get:
      operationId: organizations_list
      summary: List Organizations
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Organizations
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationList'
          description: ''
    post:
      operationId: organizations_create
      summary: Create Organization
      tags:
      - Organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
  /api/v1/orgs/organizations/{id}/:
    get:
      operationId: organizations_retrieve
      summary: Get Organization Details
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Organization.
        required: true
      tags:
      - Organizations
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    put:
      operationId: organizations_update
      summary: Update Organization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Organization.
        required: true
      tags:
      - Organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    patch:
      operationId: organizations_partial_update
      summary: Partial Update Organization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Organization.
        required: true
      tags:
      - Organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    delete:
      operationId: organizations_destroy
      summary: Delete Organization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Organization.
        required: true
      tags:
      - Organizations
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/orgs/organizations/{id}/upload-logo/:
    post:
      operationId: organizations_upload_logo
      summary: Upload Organization Logo
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Organization.
        required: true
      tags:
      - Organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
  /api/v1/projects/configs/:
    get:
      operationId: project_configs_list
      summary: List Project Configurations
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Projects
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectConfigList'
          description: ''
    post:
      operationId: project_configs_create
      summary: Create Project Configuration
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectConfigRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectConfigRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectConfigRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectConfig'
          description: ''
  /api/v1/projects/configs/{project}/:
    get:
      operationId: project_configs_retrieve
      summary: Get Project Configuration
      parameters:
      - in: path
        name: project
        schema:
          type: string
          format: uuid
        description: A unique value identifying this Project Configuration.
        required: true
      tags:
      - Projects
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectConfig'
          description: ''
    put:
      operationId: project_configs_update
      summary: Update Project Configuration
      parameters:
      - in: path
        name: project
        schema:
          type: string
          format: uuid
        description: A unique value identifying this Project Configuration.
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectConfigRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectConfigRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectConfigRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectConfig'
          description: ''
    patch:
      operationId: project_configs_partial_update
      summary: Partial Update Project Configuration
      parameters:
      - in: path
        name: project
        schema:
          type: string
          format: uuid
        description: A unique value identifying this Project Configuration.
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectConfigRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectConfigRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectConfigRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectConfig'
          description: ''
    delete:
      operationId: project_configs_destroy
      summary: Delete Project Configuration
      parameters:
      - in: path
        name: project
        schema:
          type: string
          format: uuid
        description: A unique value identifying this Project Configuration.
        required: true
      tags:
      - Projects
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/projects/projects/:
    get:
      operationId: projects_list
      summary: List Projects
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Projects
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectList'
          description: ''
    post:
      operationId: projects_create
      summary: Create Project
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/v1/projects/projects/{id}/:
    get:
      operationId: projects_retrieve
      summary: Get Project Details
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Project.
        required: true
      tags:
      - Projects
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    put:
      operationId: projects_update
      summary: Update Project
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Project.
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    patch:
      operationId: projects_partial_update
      summary: Partial Update Project
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Project.
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: projects_destroy
      summary: Delete Project
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Project.
        required: true
      tags:
      - Projects
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/projects/projects/{id}/upload-attachment/:
    post:
      operationId: projects_upload_attachment
      summary: Upload Project Attachment
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Project.
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/v1/workspaces/:
    get:
      operationId: workspaces_list
      summary: List Workspaces
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Workspaces
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkspaceList'
          description: ''
    post:
      operationId: workspaces_create
      summary: Create Workspace
      tags:
      - Workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkspaceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkspaceRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: ''
  /api/v1/workspaces/{id}/:
    get:
      operationId: workspaces_retrieve
      summary: Get Workspace Details
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Workspace.
        required: true
      tags:
      - Workspaces
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: ''
    put:
      operationId: workspaces_update
      summary: Update Workspace
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Workspace.
        required: true
      tags:
      - Workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkspaceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkspaceRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: ''
    patch:
      operationId: workspaces_partial_update
      summary: Partial Update Workspace
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Workspace.
        required: true
      tags:
      - Workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkspaceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkspaceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkspaceRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: ''
    delete:
      operationId: workspaces_destroy
      summary: Delete Workspace
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Workspace.
        required: true
      tags:
      - Workspaces
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/workspaces/{id}/upload-cover/:
    post:
      operationId: workspaces_upload_cover
      summary: Upload Workspace Cover Image
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Workspace.
        required: true
      tags:
      - Workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkspaceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkspaceRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: ''
  /api/v1/workspaces/members/:
    get:
      operationId: workspace_members_list
      summary: List Workspace Members
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Workspaces
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkspaceMemberList'
          description: ''
    post:
      operationId: workspace_members_create
      summary: Add Member to Workspace
      tags:
      - Workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceMemberRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkspaceMemberRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkspaceMemberRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMember'
          description: ''
  /api/v1/workspaces/members/{id}/:
    get:
      operationId: workspace_members_retrieve
      summary: Get Workspace Member Details
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Workspaces
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMember'
          description: ''
    put:
      operationId: workspace_members_update
      summary: Update Member Role
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceMemberRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkspaceMemberRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkspaceMemberRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMember'
          description: ''
    patch:
      operationId: workspace_members_partial_update
      summary: Partial Update Member
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkspaceMemberRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkspaceMemberRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkspaceMemberRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMember'
          description: ''
    delete:
      operationId: workspace_members_destroy
      summary: Remove Member from Workspace
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Workspaces
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/workspaces/members/{id}/update-role/:
    patch:
      operationId: workspace_members_update_role
      summary: Update Member Role
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkspaceMemberRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkspaceMemberRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkspaceMemberRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMember'
          description: ''
components:
  schemas:
    ActionTypeEnum:
      enum:
      - authentication
      - authorization
      - crud_operation
      - api_request
      - system_event
      - security_event
      - performance
      - integration
      - error
      type: string
      description: |-
        * `authentication` - Authentication
        * `authorization` - Authorization
        * `crud_operation` - CRUD Operation
        * `api_request` - API Request
        * `system_event` - System Event
        * `security_event` - Security Event
        * `performance` - Performance
        * `integration` - Integration
        * `error` - Error
    AuthToken:
      type: object
      properties:
        token:
          type: string
          readOnly: true
      required:
      - token
    AuthTokenRequest:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    AvatarUploadRequest:
      type: object
      properties:
        avatar:
          type: string
          format: binary
          description: Avatar image file
      required:
      - avatar
    ErrorLog:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        error_type:
          type: string
          maxLength: 100
        error_message:
          type: string
        stack_trace:
          type: string
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        status:
          $ref: '#/components/schemas/ErrorLogStatusEnum'
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        ip_address:
          type: string
          readOnly: true
          nullable: true
        request_data:
          type: object
          additionalProperties: {}
          readOnly: true
        environment_info:
          type: object
          additionalProperties: {}
          readOnly: true
        occurrence_count:
          type: integer
          readOnly: true
        first_occurrence:
          type: string
          format: date-time
          readOnly: true
        last_occurrence:
          type: string
          format: date-time
          readOnly: true
        resolved_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        resolved_at:
          type: string
          format: date-time
          nullable: true
        resolution_notes:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - environment_info
      - error_message
      - error_type
      - first_occurrence
      - id
      - ip_address
      - last_occurrence
      - occurrence_count
      - request_data
      - resolved_by
      - stack_trace
      - updated_at
      - user
    ErrorLogRequest:
      type: object
      properties:
        error_type:
          type: string
          minLength: 1
          maxLength: 100
        error_message:
          type: string
          minLength: 1
        stack_trace:
          type: string
          minLength: 1
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        status:
          $ref: '#/components/schemas/ErrorLogStatusEnum'
        resolved_at:
          type: string
          format: date-time
          nullable: true
        resolution_notes:
          type: string
      required:
      - error_message
      - error_type
      - stack_trace
    ErrorLogStatusEnum:
      enum:
      - new
      - investigating
      - resolved
      - ignored
      type: string
      description: |-
        * `new` - New
        * `investigating` - Investigating
        * `resolved` - Resolved
        * `ignored` - Ignored
    EstimationTypeEnum:
      enum:
      - story_points
      - hours
      - t_shirt
      type: string
      description: |-
        * `story_points` - Story Points
        * `hours` - Hours
        * `t_shirt` - T-Shirt Sizes
    LanguageEnum:
      enum:
      - en
      - es
      - fr
      - de
      - pt
      - zh
      - ja
      type: string
      description: |-
        * `en` - English
        * `es` - Spanish
        * `fr` - French
        * `de` - German
        * `pt` - Portuguese
        * `zh` - Chinese
        * `ja` - Japanese
    LevelEnum:
      enum:
      - DEBUG
      - INFO
      - WARNING
      - ERROR
      - CRITICAL
      type: string
      description: |-
        * `DEBUG` - Debug
        * `INFO` - Info
        * `WARNING` - Warning
        * `ERROR` - Error
        * `CRITICAL` - Critical
    LoginResponse:
      type: object
      properties:
        access:
          type: string
          description: JWT access token
        refresh:
          type: string
          description: JWT refresh token
        user:
          $ref: '#/components/schemas/User'
      required:
      - access
      - refresh
      - user
    LogoutRequestRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
          description: JWT refresh token to blacklist
      required:
      - refresh
    LogoutResponse:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    MethodologyEnum:
      enum:
      - scrum
      - kanban
      - waterfall
      - hybrid
      type: string
      description: |-
        * `scrum` - Scrum
        * `kanban` - Kanban
        * `waterfall` - Waterfall
        * `hybrid` - Hybrid
    Organization:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        slug:
          type: string
          pattern: ^[a-z0-9-]+$
          maxLength: 100
        description:
          type: string
        logo:
          type: string
          format: uri
          nullable: true
        logo_url:
          type: string
          readOnly: true
        website_url:
          type: string
          format: uri
          maxLength: 200
        organization_type:
          $ref: '#/components/schemas/OrganizationTypeEnum'
        subscription_plan:
          $ref: '#/components/schemas/SubscriptionPlanEnum'
        owner:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        organization_settings:
          type: object
          additionalProperties: {}
        is_active:
          type: boolean
        member_count:
          type: integer
          readOnly: true
        workspace_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - logo_url
      - member_count
      - name
      - owner
      - slug
      - updated_at
      - workspace_count
    OrganizationBasic:
      type: object
      description: Basic organization info for nested representation across all apps.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        organization_type:
          allOf:
          - $ref: '#/components/schemas/OrganizationTypeEnum'
          readOnly: true
      required:
      - id
      - name
      - organization_type
      - slug
    OrganizationMember:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        organization:
          allOf:
          - $ref: '#/components/schemas/OrganizationBasic'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        role:
          $ref: '#/components/schemas/OrganizationMemberRoleEnum'
        status:
          $ref: '#/components/schemas/OrganizationMemberStatusEnum'
        permissions:
          type: object
          additionalProperties: {}
        invited_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        invited_at:
          type: string
          format: date-time
          readOnly: true
        joined_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - invited_at
      - invited_by
      - joined_at
      - organization
      - updated_at
      - user
    OrganizationMemberRequest:
      type: object
      properties:
        user_id:
          type: integer
          writeOnly: true
        role:
          $ref: '#/components/schemas/OrganizationMemberRoleEnum'
        status:
          $ref: '#/components/schemas/OrganizationMemberStatusEnum'
        permissions:
          type: object
          additionalProperties: {}
        is_active:
          type: boolean
      required:
      - user_id
    OrganizationMemberRoleEnum:
      enum:
      - owner
      - admin
      - manager
      - member
      - guest
      type: string
      description: |-
        * `owner` - Owner
        * `admin` - Administrator
        * `manager` - Manager
        * `member` - Member
        * `guest` - Guest
    OrganizationMemberStatusEnum:
      enum:
      - active
      - pending
      - suspended
      - inactive
      type: string
      description: |-
        * `active` - Active
        * `pending` - Pending
        * `suspended` - Suspended
        * `inactive` - Inactive
    OrganizationRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        slug:
          type: string
          minLength: 1
          pattern: ^[a-z0-9-]+$
          maxLength: 100
        description:
          type: string
        logo:
          type: string
          format: binary
          nullable: true
        website_url:
          type: string
          format: uri
          maxLength: 200
        organization_type:
          $ref: '#/components/schemas/OrganizationTypeEnum'
        subscription_plan:
          $ref: '#/components/schemas/SubscriptionPlanEnum'
        organization_settings:
          type: object
          additionalProperties: {}
        is_active:
          type: boolean
      required:
      - name
      - slug
    OrganizationTypeEnum:
      enum:
      - startup
      - enterprise
      - agency
      - nonprofit
      - education
      - government
      - other
      type: string
      description: |-
        * `startup` - Startup
        * `enterprise` - Enterprise
        * `agency` - Agency
        * `nonprofit` - Non-profit
        * `education` - Educational
        * `government` - Government
        * `other` - Other
    PaginatedErrorLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ErrorLog'
    PaginatedOrganizationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
    PaginatedOrganizationMemberList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationMember'
    PaginatedProjectConfigList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectConfig'
    PaginatedProjectList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Project'
    PaginatedSystemLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SystemLog'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedUserProfileList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserProfile'
    PaginatedWorkspaceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Workspace'
    PaginatedWorkspaceMemberList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceMember'
    PasswordChangeRequest:
      type: object
      properties:
        old_password:
          type: string
          writeOnly: true
          minLength: 1
        new_password:
          type: string
          writeOnly: true
          minLength: 1
        new_password_confirm:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - new_password
      - new_password_confirm
      - old_password
    PasswordChangeResponse:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    PasswordResetConfirmRequest:
      type: object
      properties:
        token:
          type: string
          minLength: 1
        new_password:
          type: string
          writeOnly: true
          minLength: 1
        new_password_confirm:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - new_password
      - new_password_confirm
      - token
    PasswordResetConfirmResponse:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    PasswordResetRequestRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    PasswordResetRequestResponse:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    PatchedErrorLogRequest:
      type: object
      properties:
        error_type:
          type: string
          minLength: 1
          maxLength: 100
        error_message:
          type: string
          minLength: 1
        stack_trace:
          type: string
          minLength: 1
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        status:
          $ref: '#/components/schemas/ErrorLogStatusEnum'
        resolved_at:
          type: string
          format: date-time
          nullable: true
        resolution_notes:
          type: string
    PatchedOrganizationMemberRequest:
      type: object
      properties:
        user_id:
          type: integer
          writeOnly: true
        role:
          $ref: '#/components/schemas/OrganizationMemberRoleEnum'
        status:
          $ref: '#/components/schemas/OrganizationMemberStatusEnum'
        permissions:
          type: object
          additionalProperties: {}
        is_active:
          type: boolean
    PatchedOrganizationRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        slug:
          type: string
          minLength: 1
          pattern: ^[a-z0-9-]+$
          maxLength: 100
        description:
          type: string
        logo:
          type: string
          format: binary
          nullable: true
        website_url:
          type: string
          format: uri
          maxLength: 200
        organization_type:
          $ref: '#/components/schemas/OrganizationTypeEnum'
        subscription_plan:
          $ref: '#/components/schemas/SubscriptionPlanEnum'
        organization_settings:
          type: object
          additionalProperties: {}
        is_active:
          type: boolean
    PatchedProjectConfigRequest:
      type: object
      properties:
        sprint_duration:
          allOf:
          - $ref: '#/components/schemas/SprintDurationEnum'
          description: |-
            Sprint duration in weeks

            * `1` - 1 Week
            * `2` - 2 Weeks
            * `3` - 3 Weeks
            * `4` - 4 Weeks
          minimum: 0
          maximum: 2147483647
        auto_close_sprints:
          type: boolean
        estimation_type:
          $ref: '#/components/schemas/EstimationTypeEnum'
        story_point_scale:
          type: object
          additionalProperties: {}
          description: 'Fibonacci sequence: [1, 2, 3, 5, 8, 13, 21]'
        enable_time_tracking:
          type: boolean
        require_time_logging:
          type: boolean
        enable_sub_tasks:
          type: boolean
        email_notifications:
          type: boolean
        slack_notifications:
          type: boolean
        slack_webhook_url:
          type: string
          format: uri
          maxLength: 200
        restrict_issue_visibility:
          type: boolean
        require_approval_for_changes:
          type: boolean
    PatchedProjectRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        key:
          type: string
          minLength: 1
          maxLength: 10
        description:
          type: string
        methodology:
          $ref: '#/components/schemas/MethodologyEnum'
        status:
          $ref: '#/components/schemas/Status0acEnum'
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        estimated_hours:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        budget:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        attachments:
          type: string
          format: binary
          nullable: true
        project_settings:
          type: object
          additionalProperties: {}
        is_active:
          type: boolean
    PatchedUserProfileRequest:
      type: object
      description: Serializer aligned with UserProfile model definition.
      properties:
        avatar:
          type: string
          format: binary
          nullable: true
          description: Profile picture (max 5MB)
        bio:
          type: string
          maxLength: 500
        phone_number:
          type: string
          maxLength: 20
        timezone:
          $ref: '#/components/schemas/TimezoneEnum'
        language:
          $ref: '#/components/schemas/LanguageEnum'
        github_username:
          type: string
          maxLength: 100
        linkedin_url:
          type: string
          format: uri
          maxLength: 200
        website_url:
          type: string
          format: uri
          maxLength: 200
        notification_preferences:
          type: object
          additionalProperties: {}
    PatchedUserRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 255
        username:
          type: string
          minLength: 1
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          minLength: 1
          maxLength: 30
        last_name:
          type: string
          minLength: 1
          maxLength: 30
        is_active:
          type: boolean
    PatchedWorkspaceMemberRequest:
      type: object
      properties:
        workspace:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
          writeOnly: true
        role:
          $ref: '#/components/schemas/WorkspaceMemberRoleEnum'
        permissions:
          type: object
          additionalProperties: {}
        is_active:
          type: boolean
    PatchedWorkspaceRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        slug:
          type: string
          minLength: 1
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
        workspace_type:
          $ref: '#/components/schemas/WorkspaceTypeEnum'
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        cover_image:
          type: string
          format: binary
          nullable: true
        workspace_settings:
          type: object
          additionalProperties: {}
        is_active:
          type: boolean
    PriorityEnum:
      enum:
      - low
      - medium
      - high
      - critical
      type: string
      description: |-
        * `low` - Low
        * `medium` - Medium
        * `high` - High
        * `critical` - Critical
    Project:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        workspace:
          allOf:
          - $ref: '#/components/schemas/WorkspaceBasic'
          readOnly: true
        name:
          type: string
          maxLength: 255
        key:
          type: string
          maxLength: 10
        description:
          type: string
        methodology:
          $ref: '#/components/schemas/MethodologyEnum'
        status:
          $ref: '#/components/schemas/Status0acEnum'
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        lead:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        estimated_hours:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        budget:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        attachments:
          type: string
          format: uri
          nullable: true
        attachments_url:
          type: string
          readOnly: true
        project_settings:
          type: object
          additionalProperties: {}
        is_active:
          type: boolean
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        team_member_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - attachments_url
      - created_at
      - created_by
      - id
      - key
      - lead
      - name
      - team_member_count
      - updated_at
      - workspace
    ProjectBasic:
      type: object
      description: Basic project info for nested representation across all apps.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        key:
          type: string
          readOnly: true
        methodology:
          allOf:
          - $ref: '#/components/schemas/MethodologyEnum'
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/Status0acEnum'
          readOnly: true
      required:
      - id
      - key
      - methodology
      - name
      - status
    ProjectConfig:
      type: object
      properties:
        project:
          allOf:
          - $ref: '#/components/schemas/ProjectBasic'
          readOnly: true
        sprint_duration:
          allOf:
          - $ref: '#/components/schemas/SprintDurationEnum'
          description: |-
            Sprint duration in weeks

            * `1` - 1 Week
            * `2` - 2 Weeks
            * `3` - 3 Weeks
            * `4` - 4 Weeks
          minimum: 0
          maximum: 2147483647
        auto_close_sprints:
          type: boolean
        estimation_type:
          $ref: '#/components/schemas/EstimationTypeEnum'
        story_point_scale:
          type: object
          additionalProperties: {}
          description: 'Fibonacci sequence: [1, 2, 3, 5, 8, 13, 21]'
        enable_time_tracking:
          type: boolean
        require_time_logging:
          type: boolean
        enable_sub_tasks:
          type: boolean
        email_notifications:
          type: boolean
        slack_notifications:
          type: boolean
        slack_webhook_url:
          type: string
          format: uri
          maxLength: 200
        restrict_issue_visibility:
          type: boolean
        require_approval_for_changes:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - project
      - updated_at
    ProjectConfigRequest:
      type: object
      properties:
        sprint_duration:
          allOf:
          - $ref: '#/components/schemas/SprintDurationEnum'
          description: |-
            Sprint duration in weeks

            * `1` - 1 Week
            * `2` - 2 Weeks
            * `3` - 3 Weeks
            * `4` - 4 Weeks
          minimum: 0
          maximum: 2147483647
        auto_close_sprints:
          type: boolean
        estimation_type:
          $ref: '#/components/schemas/EstimationTypeEnum'
        story_point_scale:
          type: object
          additionalProperties: {}
          description: 'Fibonacci sequence: [1, 2, 3, 5, 8, 13, 21]'
        enable_time_tracking:
          type: boolean
        require_time_logging:
          type: boolean
        enable_sub_tasks:
          type: boolean
        email_notifications:
          type: boolean
        slack_notifications:
          type: boolean
        slack_webhook_url:
          type: string
          format: uri
          maxLength: 200
        restrict_issue_visibility:
          type: boolean
        require_approval_for_changes:
          type: boolean
    ProjectRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        key:
          type: string
          minLength: 1
          maxLength: 10
        description:
          type: string
        methodology:
          $ref: '#/components/schemas/MethodologyEnum'
        status:
          $ref: '#/components/schemas/Status0acEnum'
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        estimated_hours:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        budget:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        attachments:
          type: string
          format: binary
          nullable: true
        project_settings:
          type: object
          additionalProperties: {}
        is_active:
          type: boolean
      required:
      - key
      - name
    SeverityEnum:
      enum:
      - low
      - medium
      - high
      - critical
      type: string
      description: |-
        * `low` - Low
        * `medium` - Medium
        * `high` - High
        * `critical` - Critical
    SprintDurationEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      type: integer
      description: |-
        * `1` - 1 Week
        * `2` - 2 Weeks
        * `3` - 3 Weeks
        * `4` - 4 Weeks
    Status0acEnum:
      enum:
      - planning
      - active
      - on_hold
      - completed
      - cancelled
      - archived
      type: string
      description: |-
        * `planning` - Planning
        * `active` - Active
        * `on_hold` - On Hold
        * `completed` - Completed
        * `cancelled` - Cancelled
        * `archived` - Archived
    SubscriptionPlanEnum:
      enum:
      - free
      - basic
      - professional
      - enterprise
      type: string
      description: |-
        * `free` - Free
        * `basic` - Basic
        * `professional` - Professional
        * `enterprise` - Enterprise
    SystemLog:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        level:
          $ref: '#/components/schemas/LevelEnum'
        action:
          type: string
          maxLength: 100
        action_type:
          $ref: '#/components/schemas/ActionTypeEnum'
        message:
          type: string
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        ip_address:
          type: string
          nullable: true
        user_agent:
          type: string
        request_method:
          type: string
          maxLength: 10
        request_path:
          type: string
        request_data:
          type: object
          additionalProperties: {}
        response_status:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        execution_time:
          type: number
          format: double
          nullable: true
        metadata:
          type: object
          additionalProperties: {}
        stack_trace:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - action
      - created_at
      - id
      - level
      - message
      - user
    TimezoneEnum:
      enum:
      - UTC
      - America/New_York
      - America/Chicago
      - America/Denver
      - America/Los_Angeles
      - Europe/London
      - Europe/Paris
      - Asia/Tokyo
      - Asia/Shanghai
      - Australia/Sydney
      type: string
      description: |-
        * `UTC` - UTC
        * `America/New_York` - Eastern Time
        * `America/Chicago` - Central Time
        * `America/Denver` - Mountain Time
        * `America/Los_Angeles` - Pacific Time
        * `Europe/London` - London
        * `Europe/Paris` - Paris
        * `Asia/Tokyo` - Tokyo
        * `Asia/Shanghai` - Shanghai
        * `Australia/Sydney` - Sydney
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 255
        username:
          type: string
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        full_name:
          type: string
          readOnly: true
        is_active:
          type: boolean
        is_verified:
          type: boolean
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        profile:
          allOf:
          - $ref: '#/components/schemas/UserProfileNested'
          readOnly: true
      required:
      - date_joined
      - email
      - first_name
      - full_name
      - id
      - is_verified
      - last_login
      - last_name
      - profile
      - username
    UserBasic:
      type: object
      description: Basic user info for nested representation across all apps.
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        username:
          type: string
          readOnly: true
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        full_name:
          type: string
          readOnly: true
      required:
      - email
      - first_name
      - full_name
      - id
      - last_name
      - username
    UserLoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - password
    UserProfile:
      type: object
      description: Serializer aligned with UserProfile model definition.
      properties:
        user:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        avatar:
          type: string
          format: uri
          nullable: true
          description: Profile picture (max 5MB)
        avatar_url:
          type: string
          readOnly: true
        bio:
          type: string
          maxLength: 500
        phone_number:
          type: string
          maxLength: 20
        timezone:
          $ref: '#/components/schemas/TimezoneEnum'
        language:
          $ref: '#/components/schemas/LanguageEnum'
        github_username:
          type: string
          maxLength: 100
        linkedin_url:
          type: string
          format: uri
          maxLength: 200
        website_url:
          type: string
          format: uri
          maxLength: 200
        notification_preferences:
          type: object
          additionalProperties: {}
        is_online:
          type: boolean
          readOnly: true
        last_activity:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - avatar_url
      - created_at
      - is_online
      - last_activity
      - updated_at
      - user
    UserProfileNested:
      type: object
      properties:
        avatar_url:
          type: string
          readOnly: true
        bio:
          type: string
          maxLength: 500
        phone_number:
          type: string
          maxLength: 20
        timezone:
          $ref: '#/components/schemas/TimezoneEnum'
        language:
          $ref: '#/components/schemas/LanguageEnum'
        github_username:
          type: string
          maxLength: 100
        linkedin_url:
          type: string
          format: uri
          maxLength: 200
        website_url:
          type: string
          format: uri
          maxLength: 200
        is_online:
          type: boolean
          readOnly: true
        last_activity:
          type: string
          format: date-time
          readOnly: true
      required:
      - avatar_url
      - is_online
      - last_activity
    UserProfileNestedRequest:
      type: object
      properties:
        bio:
          type: string
          maxLength: 500
        phone_number:
          type: string
          maxLength: 20
        timezone:
          $ref: '#/components/schemas/TimezoneEnum'
        language:
          $ref: '#/components/schemas/LanguageEnum'
        github_username:
          type: string
          maxLength: 100
        linkedin_url:
          type: string
          format: uri
          maxLength: 200
        website_url:
          type: string
          format: uri
          maxLength: 200
    UserProfileRequest:
      type: object
      description: Serializer aligned with UserProfile model definition.
      properties:
        avatar:
          type: string
          format: binary
          nullable: true
          description: Profile picture (max 5MB)
        bio:
          type: string
          maxLength: 500
        phone_number:
          type: string
          maxLength: 20
        timezone:
          $ref: '#/components/schemas/TimezoneEnum'
        language:
          $ref: '#/components/schemas/LanguageEnum'
        github_username:
          type: string
          maxLength: 100
        linkedin_url:
          type: string
          format: uri
          maxLength: 200
        website_url:
          type: string
          format: uri
          maxLength: 200
        notification_preferences:
          type: object
          additionalProperties: {}
    UserRegistrationRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 255
        username:
          type: string
          minLength: 1
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          minLength: 1
          maxLength: 30
        last_name:
          type: string
          minLength: 1
          maxLength: 30
        password:
          type: string
          writeOnly: true
          minLength: 1
        password_confirm:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - first_name
      - last_name
      - password
      - password_confirm
      - username
    UserRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 255
        username:
          type: string
          minLength: 1
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          minLength: 1
          maxLength: 30
        last_name:
          type: string
          minLength: 1
          maxLength: 30
        is_active:
          type: boolean
      required:
      - email
      - first_name
      - last_name
      - username
    VisibilityEnum:
      enum:
      - public
      - private
      - restricted
      type: string
      description: |-
        * `public` - Public
        * `private` - Private
        * `restricted` - Restricted
    Workspace:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        organization:
          allOf:
          - $ref: '#/components/schemas/OrganizationBasic'
          readOnly: true
        name:
          type: string
          maxLength: 255
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
        workspace_type:
          $ref: '#/components/schemas/WorkspaceTypeEnum'
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        cover_image:
          type: string
          format: uri
          nullable: true
        cover_image_url:
          type: string
          readOnly: true
        workspace_settings:
          type: object
          additionalProperties: {}
        is_active:
          type: boolean
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        member_count:
          type: integer
          readOnly: true
        project_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - cover_image_url
      - created_at
      - created_by
      - id
      - member_count
      - name
      - organization
      - project_count
      - slug
      - updated_at
    WorkspaceBasic:
      type: object
      description: Basic workspace info for nested representation across all apps.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        workspace_type:
          allOf:
          - $ref: '#/components/schemas/WorkspaceTypeEnum'
          readOnly: true
      required:
      - id
      - name
      - slug
      - workspace_type
    WorkspaceMember:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        workspace:
          type: string
          format: uuid
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        role:
          $ref: '#/components/schemas/WorkspaceMemberRoleEnum'
        permissions:
          type: object
          additionalProperties: {}
        is_active:
          type: boolean
        joined_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - id
      - joined_at
      - updated_at
      - user
      - workspace
    WorkspaceMemberRequest:
      type: object
      properties:
        workspace:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
          writeOnly: true
        role:
          $ref: '#/components/schemas/WorkspaceMemberRoleEnum'
        permissions:
          type: object
          additionalProperties: {}
        is_active:
          type: boolean
      required:
      - user_id
      - workspace
    WorkspaceMemberRoleEnum:
      enum:
      - admin
      - manager
      - member
      - viewer
      type: string
      description: |-
        * `admin` - Administrator
        * `manager` - Manager
        * `member` - Member
        * `viewer` - Viewer
    WorkspaceRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        slug:
          type: string
          minLength: 1
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
        workspace_type:
          $ref: '#/components/schemas/WorkspaceTypeEnum'
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        cover_image:
          type: string
          format: binary
          nullable: true
        workspace_settings:
          type: object
          additionalProperties: {}
        is_active:
          type: boolean
      required:
      - name
      - slug
    WorkspaceTypeEnum:
      enum:
      - development
      - design
      - marketing
      - sales
      - support
      - hr
      - finance
      - general
      type: string
      description: |-
        * `development` - Development
        * `design` - Design
        * `marketing` - Marketing
        * `sales` - Sales
        * `support` - Support
        * `hr` - Human Resources
        * `finance` - Finance
        * `general` - General
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
- name: Authentication
  description: User registration, authentication, profiles and password management
- name: Organizations
  description: Organization creation, management and member administration
- name: Workspaces
  description: Workspace management and team collaboration tools
- name: Projects
  description: Project creation, configuration and lifecycle management
- name: Logging
  description: System audit trails, error tracking and monitoring
