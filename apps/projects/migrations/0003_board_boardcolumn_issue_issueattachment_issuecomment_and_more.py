# Generated by Django 5.0.7 on 2025-10-04 19:10

import apps.projects.models.issue_attachment_model
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0002_remove_projectconfiguration_id_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('board_type', models.CharField(choices=[('kanban', 'Kanban'), ('scrum', 'Scrum')], default='kanban', max_length=20)),
                ('saved_filter', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_boards', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boards', to='projects.project')),
            ],
            options={
                'verbose_name': 'Board',
                'verbose_name_plural': 'Boards',
                'db_table': 'boards',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BoardColumn',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('order', models.PositiveIntegerField(default=0)),
                ('min_wip', models.PositiveIntegerField(blank=True, null=True)),
                ('max_wip', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='columns', to='projects.board')),
                ('workflow_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='board_columns', to='projects.workflowstatus')),
            ],
            options={
                'verbose_name': 'Board Column',
                'verbose_name_plural': 'Board Columns',
                'db_table': 'board_columns',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=20)),
                ('title', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True)),
                ('priority', models.CharField(choices=[('P1', 'Critical'), ('P2', 'High'), ('P3', 'Medium'), ('P4', 'Low')], default='P3', max_length=2)),
                ('estimated_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('actual_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('story_points', models.PositiveIntegerField(blank=True, null=True)),
                ('order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_issues', to=settings.AUTH_USER_MODEL)),
                ('issue_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='issues', to='projects.issuetype')),
                ('parent_issue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_issues', to='projects.issue')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issues', to='projects.project')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_issues', to=settings.AUTH_USER_MODEL)),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='issues', to='projects.workflowstatus')),
            ],
            options={
                'verbose_name': 'Issue',
                'verbose_name_plural': 'Issues',
                'db_table': 'issues',
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='IssueAttachment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to=apps.projects.models.issue_attachment_model.issue_attachment_path)),
                ('filename', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField()),
                ('content_type', models.CharField(max_length=100)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='projects.issue')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_issue_attachments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Issue Attachment',
                'verbose_name_plural': 'Issue Attachments',
                'db_table': 'issue_attachments',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='IssueComment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('is_edited', models.BooleanField(default=False)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issue_comments', to=settings.AUTH_USER_MODEL)),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='projects.issue')),
            ],
            options={
                'verbose_name': 'Issue Comment',
                'verbose_name_plural': 'Issue Comments',
                'db_table': 'issue_comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='IssueLink',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('link_type', models.CharField(choices=[('blocks', 'Blocks'), ('blocked_by', 'Blocked By'), ('relates_to', 'Relates To'), ('duplicates', 'Duplicates'), ('duplicated_by', 'Duplicated By'), ('depends_on', 'Depends On'), ('dependency_of', 'Dependency Of')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_issue_links', to=settings.AUTH_USER_MODEL)),
                ('source_issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_links', to='projects.issue')),
                ('target_issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_links', to='projects.issue')),
            ],
            options={
                'verbose_name': 'Issue Link',
                'verbose_name_plural': 'Issue Links',
                'db_table': 'issue_links',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Sprint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('goal', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planning', max_length=20)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('completed_points', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('committed_points', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_sprints', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sprints', to='projects.project')),
            ],
            options={
                'verbose_name': 'Sprint',
                'verbose_name_plural': 'Sprints',
                'db_table': 'sprints',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='issue',
            name='sprint',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issues', to='projects.sprint'),
        ),
        migrations.AddIndex(
            model_name='board',
            index=models.Index(fields=['project'], name='boards_project_2b0204_idx'),
        ),
        migrations.AddIndex(
            model_name='boardcolumn',
            index=models.Index(fields=['board', 'order'], name='board_colum_board_i_69f56f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='boardcolumn',
            unique_together={('board', 'order')},
        ),
        migrations.AddIndex(
            model_name='issueattachment',
            index=models.Index(fields=['issue'], name='issue_attac_issue_i_4e0c70_idx'),
        ),
        migrations.AddIndex(
            model_name='issueattachment',
            index=models.Index(fields=['uploaded_by'], name='issue_attac_uploade_64d3f5_idx'),
        ),
        migrations.AddIndex(
            model_name='issuecomment',
            index=models.Index(fields=['issue', 'created_at'], name='issue_comme_issue_i_937053_idx'),
        ),
        migrations.AddIndex(
            model_name='issuecomment',
            index=models.Index(fields=['author'], name='issue_comme_author__1cd3cb_idx'),
        ),
        migrations.AddIndex(
            model_name='issuelink',
            index=models.Index(fields=['source_issue'], name='issue_links_source__e625b6_idx'),
        ),
        migrations.AddIndex(
            model_name='issuelink',
            index=models.Index(fields=['target_issue'], name='issue_links_target__54f093_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='issuelink',
            unique_together={('source_issue', 'target_issue', 'link_type')},
        ),
        migrations.AddIndex(
            model_name='sprint',
            index=models.Index(fields=['project', 'status'], name='sprints_project_d1ab01_idx'),
        ),
        migrations.AddIndex(
            model_name='sprint',
            index=models.Index(fields=['start_date', 'end_date'], name='sprints_start_d_264577_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='sprint',
            unique_together={('project', 'name')},
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['project', 'key'], name='issues_project_2bc950_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['assignee'], name='issues_assigne_43044f_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['sprint'], name='issues_sprint__476fd7_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['status'], name='issues_status__d817f8_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['priority'], name='issues_priorit_9e4563_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='issue',
            unique_together={('project', 'key')},
        ),
    ]
