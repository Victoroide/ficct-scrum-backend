# Generated by Django 5.0.7 on 2025-10-10 14:22

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projects', '0003_board_boardcolumn_issue_issueattachment_issuecomment_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='GitHubIntegration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('repository_url', models.URLField(max_length=500)),
                ('repository_owner', models.CharField(max_length=255)),
                ('repository_name', models.CharField(max_length=255)),
                ('access_token', models.BinaryField()),
                ('installation_id', models.CharField(blank=True, max_length=100, null=True)),
                ('webhook_secret', models.CharField(blank=True, max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('last_sync_at', models.DateTimeField(blank=True, null=True)),
                ('sync_status', models.CharField(choices=[('idle', 'Idle'), ('syncing', 'Syncing'), ('error', 'Error')], default='idle', max_length=20)),
                ('auto_link_commits', models.BooleanField(default=True)),
                ('smart_commits_enabled', models.BooleanField(default=True)),
                ('sync_pull_requests', models.BooleanField(default=True)),
                ('connected_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='github_integration', to='projects.project')),
            ],
            options={
                'verbose_name': 'GitHub Integration',
                'verbose_name_plural': 'GitHub Integrations',
                'db_table': 'github_integrations',
                'ordering': ['-connected_at'],
            },
        ),
        migrations.CreateModel(
            name='GitHubCommit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sha', models.CharField(max_length=40)),
                ('message', models.TextField()),
                ('author_name', models.CharField(max_length=255)),
                ('author_email', models.EmailField(max_length=254)),
                ('commit_date', models.DateTimeField()),
                ('branch', models.CharField(default='main', max_length=255)),
                ('url', models.URLField(max_length=500)),
                ('synced_at', models.DateTimeField(auto_now_add=True)),
                ('linked_issues', models.ManyToManyField(blank=True, related_name='commits', to='projects.issue')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commits', to='integrations.githubintegration')),
            ],
            options={
                'verbose_name': 'GitHub Commit',
                'verbose_name_plural': 'GitHub Commits',
                'db_table': 'github_commits',
                'ordering': ['-commit_date'],
                'indexes': [models.Index(fields=['repository', 'commit_date'], name='github_comm_reposit_f024f4_idx'), models.Index(fields=['sha'], name='github_comm_sha_a8b96b_idx'), models.Index(fields=['author_email'], name='github_comm_author__ccfd4c_idx')],
                'unique_together': {('repository', 'sha')},
            },
        ),
        migrations.CreateModel(
            name='GitHubPullRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pr_number', models.IntegerField()),
                ('title', models.CharField(max_length=500)),
                ('state', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed'), ('merged', 'Merged')], max_length=20)),
                ('body', models.TextField(blank=True)),
                ('base_branch', models.CharField(max_length=255)),
                ('head_branch', models.CharField(max_length=255)),
                ('author', models.CharField(max_length=255)),
                ('url', models.URLField(max_length=500)),
                ('additions', models.IntegerField(default=0)),
                ('deletions', models.IntegerField(default=0)),
                ('changed_files', models.IntegerField(default=0)),
                ('commits_count', models.IntegerField(default=0)),
                ('merged_at', models.DateTimeField(blank=True, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('synced_at', models.DateTimeField(auto_now=True)),
                ('linked_issues', models.ManyToManyField(blank=True, related_name='pull_requests', to='projects.issue')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pull_requests', to='integrations.githubintegration')),
            ],
            options={
                'verbose_name': 'GitHub Pull Request',
                'verbose_name_plural': 'GitHub Pull Requests',
                'db_table': 'github_pull_requests',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['repository', 'state'], name='github_pull_reposit_a91fe0_idx'), models.Index(fields=['pr_number'], name='github_pull_pr_numb_aeae1c_idx'), models.Index(fields=['state'], name='github_pull_state_2564c1_idx')],
                'unique_together': {('repository', 'pr_number')},
            },
        ),
    ]
