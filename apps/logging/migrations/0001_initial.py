# Generated by Django 5.0.7 on 2025-09-06 21:55

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AlertRule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "condition_type",
                    models.CharField(
                        choices=[
                            ("error_count", "Error Count"),
                            ("error_rate", "Error Rate"),
                            ("response_time", "Response Time"),
                            ("user_activity", "User Activity"),
                            ("security_event", "Security Event"),
                            ("system_resource", "System Resource"),
                        ],
                        max_length=20,
                    ),
                ),
                ("condition_config", models.JSONField(default=dict)),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("info", "Info"),
                            ("warning", "Warning"),
                            ("critical", "Critical"),
                        ],
                        default="warning",
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("paused", "Paused"),
                        ],
                        default="active",
                        max_length=10,
                    ),
                ),
                ("notification_channels", models.JSONField(default=list)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_alert_rules",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Alert Rule",
                "verbose_name_plural": "Alert Rules",
                "db_table": "alert_rules",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Alert",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("triggered", "Triggered"),
                            ("acknowledged", "Acknowledged"),
                            ("resolved", "Resolved"),
                            ("suppressed", "Suppressed"),
                        ],
                        default="triggered",
                        max_length=20,
                    ),
                ),
                ("message", models.TextField()),
                ("details", models.JSONField(default=dict)),
                ("triggered_at", models.DateTimeField(auto_now_add=True)),
                ("acknowledged_at", models.DateTimeField(blank=True, null=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "acknowledged_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="acknowledged_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "rule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alerts",
                        to="logging.alertrule",
                    ),
                ),
            ],
            options={
                "verbose_name": "Alert",
                "verbose_name_plural": "Alerts",
                "db_table": "alerts",
                "ordering": ["-triggered_at"],
                "indexes": [
                    models.Index(
                        fields=["status", "triggered_at"],
                        name="alerts_status_65bab4_idx",
                    ),
                    models.Index(
                        fields=["rule", "triggered_at"],
                        name="alerts_rule_id_c357b2_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("create", "Create"),
                            ("read", "Read"),
                            ("update", "Update"),
                            ("delete", "Delete"),
                            ("login", "Login"),
                            ("logout", "Logout"),
                            ("permission_change", "Permission Change"),
                            ("status_change", "Status Change"),
                            ("export", "Export"),
                            ("import", "Import"),
                        ],
                        max_length=20,
                    ),
                ),
                ("resource_type", models.CharField(max_length=100)),
                (
                    "resource_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("object_id", models.CharField(blank=True, max_length=255, null=True)),
                ("old_values", models.JSONField(blank=True, default=dict)),
                ("new_values", models.JSONField(blank=True, default=dict)),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField()),
                ("session_id", models.CharField(blank=True, max_length=255)),
                ("additional_data", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="audit_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Audit Log",
                "verbose_name_plural": "Audit Logs",
                "db_table": "audit_logs",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "created_at"],
                        name="audit_logs_user_id_fbfd51_idx",
                    ),
                    models.Index(
                        fields=["action", "created_at"],
                        name="audit_logs_action_391715_idx",
                    ),
                    models.Index(
                        fields=["resource_type", "created_at"],
                        name="audit_logs_resourc_b47635_idx",
                    ),
                    models.Index(
                        fields=["ip_address", "created_at"],
                        name="audit_logs_ip_addr_b969fa_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ErrorLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("error_type", models.CharField(max_length=100)),
                ("error_message", models.TextField()),
                ("stack_trace", models.TextField()),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("investigating", "Investigating"),
                            ("resolved", "Resolved"),
                            ("ignored", "Ignored"),
                        ],
                        default="new",
                        max_length=20,
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("request_data", models.JSONField(blank=True, default=dict)),
                ("environment_info", models.JSONField(blank=True, default=dict)),
                ("occurrence_count", models.PositiveIntegerField(default=1)),
                ("first_occurrence", models.DateTimeField(auto_now_add=True)),
                ("last_occurrence", models.DateTimeField(auto_now=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("resolution_notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_errors",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="error_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Error Log",
                "verbose_name_plural": "Error Logs",
                "db_table": "error_logs",
                "ordering": ["-last_occurrence"],
                "indexes": [
                    models.Index(
                        fields=["severity", "status"],
                        name="error_logs_severit_44d32d_idx",
                    ),
                    models.Index(
                        fields=["error_type", "created_at"],
                        name="error_logs_error_t_f63947_idx",
                    ),
                    models.Index(
                        fields=["user", "created_at"],
                        name="error_logs_user_id_71f3b9_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SystemLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("DEBUG", "Debug"),
                            ("INFO", "Info"),
                            ("WARNING", "Warning"),
                            ("ERROR", "Error"),
                            ("CRITICAL", "Critical"),
                        ],
                        max_length=10,
                    ),
                ),
                ("action", models.CharField(max_length=100)),
                (
                    "action_type",
                    models.CharField(
                        choices=[
                            ("authentication", "Authentication"),
                            ("authorization", "Authorization"),
                            ("crud_operation", "CRUD Operation"),
                            ("api_request", "API Request"),
                            ("system_event", "System Event"),
                            ("security_event", "Security Event"),
                            ("performance", "Performance"),
                            ("integration", "Integration"),
                            ("error", "Error"),
                        ],
                        default="system_event",
                        max_length=20,
                    ),
                ),
                ("message", models.TextField()),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("request_method", models.CharField(blank=True, max_length=10)),
                ("request_path", models.TextField(blank=True)),
                ("request_data", models.JSONField(blank=True, default=dict)),
                ("response_status", models.IntegerField(blank=True, null=True)),
                ("execution_time", models.FloatField(blank=True, null=True)),
                ("object_id", models.CharField(blank=True, max_length=255, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("stack_trace", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="system_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "System Log",
                "verbose_name_plural": "System Logs",
                "db_table": "system_logs",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["level", "created_at"],
                        name="system_logs_level_5a2647_idx",
                    ),
                    models.Index(
                        fields=["action_type", "created_at"],
                        name="system_logs_action__a4309f_idx",
                    ),
                    models.Index(
                        fields=["user", "created_at"],
                        name="system_logs_user_id_9ba726_idx",
                    ),
                    models.Index(
                        fields=["ip_address", "created_at"],
                        name="system_logs_ip_addr_f1aa99_idx",
                    ),
                ],
            },
        ),
    ]
