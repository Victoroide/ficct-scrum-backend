services:
  web_wsgi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ficct_web_wsgi
    command: >
      bash -c "python manage.py collectstatic --noinput && gunicorn --bind 0.0.0.0:8000 base.wsgi:application"
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: base.settings
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379/3
      CHANNEL_LAYERS_REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379/3
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
    restart: unless-stopped

  web_asgi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ficct_web_asgi
    command: >
      bash -c "python manage.py collectstatic --noinput && daphne -b 0.0.0.0 -p 8001 base.asgi:application"
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: base.settings
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379/3
      CHANNEL_LAYERS_REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379/3
    volumes:
      - .:/app
    ports:
      - "8001:8001"
    depends_on:
      - redis
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: ficct_redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123}
    restart: unless-stopped

  nginx:
    image: nginx:stable-alpine
    container_name: ficct_nginx
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./static:/app/static
    depends_on:
      - web_wsgi
      - web_asgi
    restart: unless-stopped

networks:
  default:
    name: ficct_network